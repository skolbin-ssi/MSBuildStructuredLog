<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net472;net8.0-windows</TargetFrameworks>
    <OutputType>WinExe</OutputType>
    <RootNamespace>StructuredLogViewer</RootNamespace>
    <UseWPF>true</UseWPF>
    <ImportWindowsDesktopTargets>true</ImportWindowsDesktopTargets>
    <Prefer32Bit Condition="$(Prefer32Bit)==''">false</Prefer32Bit>
    <ApplicationIcon>StructuredLogger.ico</ApplicationIcon>
    <AutoGenerateBindingRedirects>false</AutoGenerateBindingRedirects>
    <Company>Microsoft</Company>
    <Product>MSBuild Structured Log Viewer</Product>
    <AssemblyTitle>MSBuild Structured Log Viewer</AssemblyTitle>
    <ApplicationManifest>app.manifest</ApplicationManifest>
    <ServerGarbageCollection>true</ServerGarbageCollection>
  </PropertyGroup>

  <ItemGroup Condition="$(TargetFramework) == 'net472'">
    <Reference Include="System.Net.Http" />
  </ItemGroup>

  <ItemGroup Condition="$(TargetFramework) != 'net472'">
    <RuntimeHostConfigurationOption Include="Switch.System.Windows.Media.EnableHardwareAccelerationInRdp" Value="true" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="AdonisUI" />
    <PackageReference Include="AdonisUI.ClassicTheme" />
    <PackageReference Include="AvalonEdit" />
    <PackageReference Include="Microsoft.Build.Locator" ExcludeAssets="build" />
    <PackageReference Include="Microsoft.Build.Tasks.Core" />
    <PackageReference Include="Mono.Cecil" />
    <PackageReference Include="Nerdbank.GitVersioning" PrivateAssets="all" />
    <PackageReference Include="squirrel.windows" GeneratePathProperty="true" />
    <PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies" PrivateAssets="all" />
    <PackageReference Include="AutomaticGraphLayout.WpfGraphControl" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\StructuredLogger.Utils\StructuredLogger.Utils.csproj" />
    <ProjectReference Include="..\StructuredLogger\StructuredLogger.csproj" />
    <ProjectReference Include="..\StructuredLogViewer.Core\StructuredLogViewer.Core.csproj" />
    <ProjectReference Include="..\TaskRunner\TaskRunner.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Resource Include="StructuredLogger.ico" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="Resources\SolutionFile.xshd" />
  </ItemGroup>

  <Target Name="EnsureTaskRunnerIsBuilt">
    <MSBuild
        Projects="..\TaskRunner\TaskRunner.csproj"
        Targets="Build"
        RemoveProperties="TargetFramework"/>
  </Target>

  <Target
      Name="CopyTaskRunnerDll"
      DependsOnTargets="EnsureTaskRunnerIsBuilt"
      BeforeTargets="GetCopyToOutputDirectoryItems"
      Condition="$(TargetFramework) == 'net472'">
    <PropertyGroup>
      <CoreTaskRunnerOutDir>$([System.IO.Path]::GetFullPath(`$(OutDir)\..\..\..\TaskRunner\$(Configuration)\net8.0`))\</CoreTaskRunnerOutDir>
    </PropertyGroup>
    <ItemGroup>
      <TaskRunnerFile Include="$(CoreTaskRunnerOutDir)TaskRunner.dll" />
      <TaskRunnerFile Include="$(CoreTaskRunnerOutDir)TaskRunner.runtimeconfig.json" />
    </ItemGroup>
    <Copy SourceFiles="@(TaskRunnerFile)"
        Condition="Exists(@(TaskRunnerFile->'%(FullPath)'))"
        DestinationFolder="$(OutDir)"
        SkipUnchangedFiles="True" />
  </Target>

  <PropertyGroup Condition="'$(TargetFramework)' == 'net472'">
    <NuspecFileName>MSBuildStructuredLogViewer</NuspecFileName>
    <NuspecPath>$(MSBuildProjectDirectory)\$(NuspecFileName).nuspec</NuspecPath>
    <ChocolateyFileName>msbuild-structured-log-viewer</ChocolateyFileName>
    <ChocolateyNuspecPath>$(MSBuildProjectDirectory)\$(ChocolateyFileName).nuspec</ChocolateyNuspecPath>
  </PropertyGroup>

  <ItemGroup Condition="'$(NuspecFileName)' != ''">
    <NuGetInput Condition="Exists('$(NuspecPath)')" Include="$(NuspecPath)" />
    <NuGetInput Include="$(MSBuildThisFileFullPath)" />
  </ItemGroup>

  <ItemGroup Condition="'$(ChocolateyFileName)' != ''">
    <ChocolateyInput Condition="Exists('$(ChocolateyNuspecPath)')" Include="$(ChocolateyNuspecPath)" />
    <ChocolateyInput Include="$(MSBuildThisFileFullPath)" />
  </ItemGroup>

  <Target Name="ExtractVersion"
          AfterTargets="CoreBuild"
          Condition="Exists('$(NuspecPath)')"
          DependsOnTargets="PrepareResources;GenerateAssemblyNBGVVersionInfo">
    <PropertyGroup>
      <NupkgPath>$(OutDir)$(NuspecFileName).$(Version).nupkg</NupkgPath>
      <ChocolateyNupkgPath>$(OutDir)$(ChocolateyFileName).$(Version).nupkg</ChocolateyNupkgPath>
    </PropertyGroup>
  </Target>

  <Target Name="BuildNuGet"
          AfterTargets="ExtractVersion"
          Condition="Exists('$(NuspecPath)')"
          DependsOnTargets="ExtractVersion"
          Inputs="@(NuGetInput)"
          Outputs="$(NupkgPath)">
    <PackTask
        PackItem="$(NuspecPath)"
        NuspecFile="$(NuspecPath)"
        NuspecBasePath="$(OutDir)"
        NuspecProperties="currentVersion=$(Version)"
        NuspecOutputPath="$(NuspecOutputPath)"
        PackageOutputPath="$(OutDir)"
        RestoreOutputPath="$(RestoreOutputPath)"
        SymbolPackageFormat="snupkg"
        />
  </Target>

  <Target Name="BuildChocolatey"
          AfterTargets="ExtractVersion"
          Condition="Exists('$(ChocolateyNuspecPath)') AND Exists('C:\ProgramData\chocolatey\choco.exe')"
          DependsOnTargets="ExtractVersion"
          Inputs="@(ChocolateyInput)"
          Outputs="$(ChocolateyNupkgPath)">
    <Exec Command="C:\ProgramData\chocolatey\choco.exe Pack &quot;$(ChocolateyNuspecPath)&quot; -OutputDirectory $(OutDir) --version=$(Version) outdir=$(OutDir)" />
  </Target>

  <Target Name="SquirrelReleasify"
          AfterTargets="BuildNuGet"
          Condition="Exists('$(NupkgPath)')"
          DependsOnTargets="BuildNuGet"
          Inputs="$(NupkgPath)"
          Outputs="$(OutDir)Releases\MSBuildStructuredLogSetup.exe">
    <Exec Command="&quot;$(PkgSquirrel_Windows)\tools\Squirrel.exe&quot; --releaseDir=$(OutDir)Releases --releasify $(NupkgPath)" />
    <Copy SourceFiles="$(OutDir)Releases\Setup.exe" DestinationFiles="$(OutDir)Releases\MSBuildStructuredLogSetup.exe" OverwriteReadOnlyFiles="true" SkipUnchangedFiles="true" />
    <Delete Files="$(OutDir)Releases\Setup.exe" />
  </Target>

</Project>